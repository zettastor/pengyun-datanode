# this source code is auto generated by script config_location_definition_generator.py,
# please don't modify it manuly!!! Just use the script to auto generate it.


package ConfigLocation;
use strict;
use warnings FATAL => 'all';

our %configLocation = (
    "archive.ejected.matcher"                                   => "archive.properties",
    "archive.plugin.matcher"                                    => "archive.properties",
    "archive.plugout.matcher"                                   => "archive.properties",
    "data.archive.directory"                                    => "archive.properties",
    "enable.file.buffer"                                        => "archive.properties",
    "enable.ssd.for.data.log"                                   => "archive.properties",
    "file.buffer.observation.duration"                          => "archive.properties",
    "file.buffer.path"                                          => "archive.properties",
    "file.buffer.rejection.percent"                             => "archive.properties",
    "file.buffer.size.gb"                                       => "archive.properties",
    "on.vms"                                                    => "archive.properties",
    "pcie.device.name.reg"                                      => "archive.properties",
    "ssd.detect.by.speed"                                       => "archive.properties",
    "ssd.device.name.reg"                                       => "archive.properties",
    "ssd.speed.min.threshold"                                   => "archive.properties",
    "unset.archive.directory"                                   => "archive.properties",
    "wait.file.buffer.timeout.ms"                               => "archive.properties",
    "app.data.tranfer.endpoint"                                 => "datanode.properties",
    "arbiter.count.limit.in.one.archive"                        => "datanode.properties",
    "arbiter.count.limit.in.one.datanode"                       => "datanode.properties",
    "archive.init.mode"                                         => "datanode.properties",
    "archive.report.rate.ms"                                    => "datanode.properties",
    "cache.bucket.metadata.size"                                => "datanode.properties",
    "cache.metadata.align.size"                                 => "datanode.properties",
    "cache.metadata.chunk.size"                                 => "datanode.properties",
    "clone.page.count.each.request"                             => "datanode.properties",
    "clone.request.count.each.segment.unit"                     => "datanode.properties",
    "clone.segment.unit.count.each.time"                        => "datanode.properties",
    "dih.endpoint"                                              => "datanode.properties",
    "enable.auto.distribute.disk.usage"                         => "datanode.properties",
    "enable.disk.native.cache"                                  => "datanode.properties",
    "fast.buffer.allocate.aligned"                              => "datanode.properties",
    "health.checker.rate"                                       => "datanode.properties",
    "ignore.device.name.reg"                                    => "datanode.properties",
    "indexer.block.cache.size.per.archive"                      => "datanode.properties",
    "indexer.cache.size.bytes"                                  => "datanode.properties",
    "indexer.compression.type"                                  => "datanode.properties",
    "indexer.flusher.bundle.size"                               => "datanode.properties",
    "indexer.flusher.bundle.timeout.sec"                        => "datanode.properties",
    "indexer.log.root"                                          => "datanode.properties",
    "indexer.max.flushers"                                      => "datanode.properties",
    "indexer.max.lazy.finalizations"                            => "datanode.properties",
    "indexer.max.opened.log.files"                              => "datanode.properties",
    "indexer.max.transactions"                                  => "datanode.properties",
    "indexer.per.log.max.size.bytes"                            => "datanode.properties",
    "instance.id.for.testing"                                   => "datanode.properties",
    "io.delay.timeunit"                                         => "datanode.properties",
    "janitor.execution.rate.ms"                                 => "datanode.properties",
    "log.dirs"                                                  => "datanode.properties",
    "log.persist.root.dir"                                      => "datanode.properties",
    "max.async.connections.per.datanode.endpoint"               => "datanode.properties",
    "max.channel.pending.size.mb"                               => "datanode.properties",
    "max.copy.page.iops"                                        => "datanode.properties",
    "max.io.data.size.per.request.bytes"                        => "datanode.properties",
    "max.io.pending.requests"                                   => "datanode.properties",
    "max.log.id.window.size"                                    => "datanode.properties",
    "max.log.id.window.split.count"                             => "datanode.properties",
    "max.pool.size.for.catchup.log.engine.pcl"                  => "datanode.properties",
    "max.pool.size.for.catchup.log.engine.ppl"                  => "datanode.properties",
    "max.push.interval.time.ms"                                 => "datanode.properties",
    "max.service.workers"                                       => "datanode.properties",
    "max.sync.connections.per.datanode.endpoint"                => "datanode.properties",
    "max.wait.for.datanode.shutdown.time.second"                => "datanode.properties",
    "min.required.log.size.mb"                                  => "datanode.properties",
    "min.reserved.disk.size.mb"                                 => "datanode.properties",
    "mkfs.cmd"                                                  => "datanode.properties",
    "need.check.os.version"                                     => "datanode.properties",
    "need.check.rollback.in.offling"                            => "datanode.properties",
    "need.partition.ssd.disk"                                   => "datanode.properties",
    "network.checksum.algorithm"                                => "datanode.properties",
    "network.connection.check.delay.ms"                         => "datanode.properties",
    "network.connection.detect.retry.maxtimes"                  => "datanode.properties",
    "network.connection.detect.server.listening.port"           => "datanode.properties",
    "num.files.in.datanode"                                     => "datanode.properties",
    "num.files.in.one.segment.unit"                             => "datanode.properties",
    "num.logs.in.one.file"                                      => "datanode.properties",
    "number.of.dirty.page.per.flush.request.for.ssd"            => "datanode.properties",
    "page.checksum.algorithm"                                   => "datanode.properties",
    "page.system.memory.cache.size"                             => "datanode.properties",
    "path.environment"                                          => "datanode.properties",
    "persist.root.directory"                                    => "datanode.properties",
    "ping.host.timeout.ms"                                      => "datanode.properties",
    "primary.fast.buffer.percentage"                            => "datanode.properties",
    "raw.app.name"                                              => "datanode.properties",
    "read.storage.io.step"                                      => "datanode.properties",
    "request.new.segment.unit.expiration.threshold.ms"          => "datanode.properties",
    "rocksdb.default.folder"                                    => "datanode.properties",
    "rocksdb.partition.folder"                                  => "datanode.properties",
    "rocksdb.partition.size"                                    => "datanode.properties",
    "secondary.fast.buffer.percentage"                          => "datanode.properties",
    "segment.report.rate.ms"                                    => "datanode.properties",
    "segmentunitdeleter.execution.rate.ms"                      => "datanode.properties",
    "shutdown.save.log.dir"                                     => "datanode.properties",
    "smart.max.copy.speed.mb"                                   => "datanode.properties",
    "smart.min.copy.speed.mb"                                   => "datanode.properties",
    "start.page.flusher"                                        => "datanode.properties",
    "storage.check.rate.ms"                                     => "datanode.properties",
    "sync.log.fast.buffer.percentage"                           => "datanode.properties",
    "target.io.latency.in.datanode.ms"                          => "datanode.properties",
    "testing"                                                   => "datanode.properties",
    "threshold.to.request.for.new.member.ms"                    => "datanode.properties",
    "thrift.client.timeout"                                     => "datanode.properties",
    "use.python.script"                                         => "datanode.properties",
    "wait.for.memory.buffer.timeout.ms"                         => "datanode.properties",
    "wait.time.ms.from.broken.to.deleted"                       => "datanode.properties",
    "wait.time.ms.to.move.segment.to.deleted"                   => "datanode.properties",
    "write.storage.io.step"                                     => "datanode.properties",
    "enventdata.output.rootpath"                                => "storage.properties",
    "io.timeout.ms"                                             => "storage.properties",
    "page.size.byte"                                            => "storage.properties",
    "segment.size.byte"                                         => "storage.properties",
);

1;
